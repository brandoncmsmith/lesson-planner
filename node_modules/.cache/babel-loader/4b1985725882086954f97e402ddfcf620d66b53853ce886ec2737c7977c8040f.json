{"ast":null,"code":"var _jsxFileName = \"/Users/brandonsmith/Google Drive/experiments/lesson-planner/lesson-plan-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define state variables to hold the form input values and the lesson plan response\n  const [gradeLevel, setGradeLevel] = useState('');\n  const [topic, setTopic] = useState('');\n  const [lessonPlan, setLessonPlan] = useState('');\n\n  // Define a function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Make a POST request to the API endpoint with the form data\n    fetch('http://localhost:4000/generateLessonPlan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        gradeLevel,\n        topic\n      })\n    }).then(response => response.json()).then(data => {\n      // Update the state variable with the lesson plan response\n      setLessonPlan(data.lessonPlan);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lesson Plan Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gradeLevel\",\n          children: \"Grade Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"gradeLevel\",\n          name: \"gradeLevel\",\n          value: gradeLevel,\n          onChange: e => setGradeLevel(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"topic\",\n          children: \"Topic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"topic\",\n          name: \"topic\",\n          value: topic,\n          onChange: e => setTopic(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Generate Lesson Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), lessonPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lesson-plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lesson Plan:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: lessonPlan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3qbVjoLlSpbZM+iQbrTt3gKyP58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","gradeLevel","setGradeLevel","topic","setTopic","lessonPlan","setLessonPlan","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/brandonsmith/Google Drive/experiments/lesson-planner/lesson-plan-generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Define state variables to hold the form input values and the lesson plan response\n  const [gradeLevel, setGradeLevel] = useState('');\n  const [topic, setTopic] = useState('');\n  const [lessonPlan, setLessonPlan] = useState('');\n\n  // Define a function to handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Make a POST request to the API endpoint with the form data\n    fetch('http://localhost:4000/generateLessonPlan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ gradeLevel, topic }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the state variable with the lesson plan response\n        setLessonPlan(data.lessonPlan);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Lesson Plan Generator</h1>\n      </header>\n      <main>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"gradeLevel\">Grade Level:</label>\n          <input\n            type=\"text\"\n            id=\"gradeLevel\"\n            name=\"gradeLevel\"\n            value={gradeLevel}\n            onChange={(e) => setGradeLevel(e.target.value)}\n            required\n          />\n          <br />\n          <label htmlFor=\"topic\">Topic:</label>\n          <input\n            type=\"text\"\n            id=\"topic\"\n            name=\"topic\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            required\n          />\n          <br />\n          <button type=\"submit\">Generate Lesson Plan</button>\n        </form>\n        {lessonPlan && (\n          <div className=\"lesson-plan\">\n            <h2>Lesson Plan:</h2>\n            <p>{lessonPlan}</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}